<?php
/**
 * Maho
 *
 * @category    design
 * @package     default_default
 * @copyright   Copyright (c) 2006-2020 Magento, Inc. (https://magento.com)
 * @copyright   Copyright (c) 2021-2022 The OpenMage Contributors (https://openmage.org)
 * @copyright   Copyright (c) 2024 Maho (https://mahocommerce.com)
 * @license     https://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<script type="text/javascript">

const inputTypeHiddenFields = <?= Mage::helper('core')->jsonEncode(Mage::helper('eav')->getInputTypeHiddenFields('catalog_product')) ?>;




function saveAndContinueEdit() {
    disableElements('save');
    var activeTab = product_attribute_tabsJsTabs.activeTab.id;
    if (editForm.submit($('edit_form').action+'back/edit/tab/' + activeTab) == false) {
        enableElements('save');
    }
    varienGlobalEvents.attachEventHandler('formValidateAjaxComplete', function () {
        enableElements('save');
    });
}

function saveAttribute() {
    disableElements('save');
    if (editForm.submit() == false) {
        enableElements('save');
    }
    varienGlobalEvents.attachEventHandler('formValidateAjaxComplete', function () {
        enableElements('save');
    });
}

function toggleApplyVisibility(select) { // TODO
    if ($(select).value == 1) {
        $(select).next('select').removeClassName('no-display');
        $(select).next('select').removeClassName('ignore-validate');

    } else {
        $(select).next('select').addClassName('no-display');
        $(select).next('select').addClassName('ignore-validate');
        var options = $(select).next('select').options;
        for( var i=0; i < options.length; i++) {
            options[i].selected = false;
        }
    }
}

function checkOptionsPanelVisibility() {
    if($('matage-options-panel')) {
        var panel = $('matage-options-panel');
        if ($('frontend_input') && ['select', 'multiselect', 'customselect'].includes($('frontend_input').value)) {
            panel.show();
        }else {
            panel.hide();
        }
    }
}


function getInputTypeValue()
{
    const el = document.getElementById('frontend_input');
    if (el) {
        return el.value;
    }
    return '';
}

function bindAttributeInputType()
{
    const inputType = getInputTypeValue();

    checkOptionsPanelVisibility();
    switchDefaultValueField();
    checkIsConfigurableVisibility();

    // todo
        // if($('backend_type') && $('backend_type').options) {
        //     for(var i=0;i<$('backend_type').options.length;i++) {
        //         if($('backend_type').options[i].value=='int') {
        //             $('backend_type').selectedIndex = i;
        //         }
        //     }
        // }

    var applyToSelect = $('apply_to');
    switch (inputType) {
        <?php foreach (Mage::helper('catalog')->getAttributeDisabledTypes() as $type=>$disabled): ?>
            case '<?= $type ?>':
            <?php foreach ($disabled as $one): ?>
                disableApplyToValue('<?= $one ?>');
            <?php endforeach ?>
            break;
        <?php endforeach ?>
        default:
        for (i=0;i<applyToSelect.options.length;i++) {
            applyToSelect.options[i].disabled = false;
        }
        break;
    }


    // switch (inputType) {
    //     case 'textarea':
    //         setRowVisibility('is_wysiwyg_enabled', true);
    //         if($('is_wysiwyg_enabled').value == '0') {
    //             setRowVisibility('is_html_allowed_on_front', true);
    //             $('is_html_allowed_on_front').disabled = false;
    //         }
    //         $('frontend_class').value = '';
    //         $('frontend_class').disabled = true;
    //         break;
    //     case 'text':
    //     case 'customselect':
    //         setRowVisibility('is_html_allowed_on_front', true);
    //         $('is_html_allowed_on_front').disabled = false;
    //         if (!$('frontend_class').getAttribute('readonly')) {
    //             $('frontend_class').disabled = false;
    //         }
    //         break;
    //     case 'select':
    //     case 'multiselect':
    //         setRowVisibility('is_html_allowed_on_front', true);
    //         $('is_html_allowed_on_front').disabled = false;
    //         break;
    //     default:
    //         $('frontend_class').value = '';
    //         $('frontend_class').disabled = true;
    // }

    switchIsFilterable();
}


function disableApplyToValue(value)
{
    var applyToSelect = $('apply_to');
    for (i=0;i<applyToSelect.options.length;i++) {
        if (value == applyToSelect.options[i].value) {
            applyToSelect.options[i].disabled = true;
            applyToSelect.options[i].selected = false;
        }
    }
}

function switchDefaultValueField()
{
    const inputType = getInputTypeValue();




    var defaultValueTextVisibility = false;
    var defaultValueTextareaVisibility = false;
    var defaultValueDateVisibility = false;
    var defaultValueYesnoVisibility = false;
    var scopeVisibility = true;



    switch (inputType) {
        case 'select':
        case 'customselect':
            optionDefaultInputType = 'radio';
            break;
        case 'multiselect':
            optionDefaultInputType = 'checkbox';
            break;
    }
    var elems = document.getElementsByName('default[]');
    for (var i = 0; i < elems.length; i++) {
        elems[i].type = optionDefaultInputType;
    }



    setFieldsetVisibility('front_fieldset', true);

    switch (inputType) {
        // case 'media_image':
        //     $('front_fieldset').previous().hide();
        //     $('front_fieldset').hide();

        //     setRowVisibility('is_required', false);
        //     setRowVisibility('is_unique', false);
        //     setRowVisibility('frontend_class', false);
        // break;

        <?php foreach (Mage::helper('catalog')->getAttributeHiddenFields() as $type=>$fields): ?>
            case '<?= $type ?>':
                <?php foreach ($fields as $one): ?>
                    <?php if ($one == '_front_fieldset'): ?>
                        setFieldsetVisibility('front_fieldset', false);
                    <?php elseif ($one == '_default_value'): ?>
                        defaultValueTextVisibility =
                        defaultValueTextareaVisibility =
                        defaultValueDateVisibility =
                        defaultValueYesnoVisibility = false;
                    <?php elseif ($one == '_scope'): ?>
                        scopeVisibility = false;
                    <?php else: ?>
                        setRowVisibility('<?= $one ?>', false);
                    <?php endif ?>
                <?php endforeach ?>
            break;
        <?php endforeach ?>

        default:
            setRowVisibility('is_required', true);
            setRowVisibility('is_unique', true);
            setRowVisibility('frontend_class', true);
            setRowVisibility('is_configurable', true);
        break;
    }

    setRowVisibility('default_value_text', defaultValueTextVisibility);
    setRowVisibility('default_value_textarea', defaultValueTextareaVisibility);
    setRowVisibility('default_value_date', defaultValueDateVisibility);
    setRowVisibility('default_value_yesno', defaultValueYesnoVisibility);
    setRowVisibility('is_global', scopeVisibility);

}

function setRowVisibility(id, isVisible) {
    const el = document.getElementById(id);
    if (el) {
        const tr = el.closest('tr');
        if (isVisible) {
            tr.classList.remove('no-display');
        } else {
            tr.blur();
            tr.classList.add('no-display');
        }
    }
}

function setFieldsetVisibility(id, isVisible) {
    const el = document.getElementById(id);
    if (el) {
        if (isVisible) {
            el.classList.remove('no-display');
            el.previousElementSibling.classList.remove('no-display');
        } else {
            el.classList.add('no-display');
            el.previousElementSibling.classList.add('no-display');
        }
    }
}


// dependence
function checkIsConfigurableVisibility() {
    if (!$('is_configurable') || !$('is_global') || !$('frontend_input')) return;
    if ($F('is_global')==1 && $F('frontend_input')=='select') {
        setRowVisibility('is_configurable', true);
    } else {
        setRowVisibility('is_configurable', false);
    }
}
// dependence
function switchIsFilterable() {
    if ($('is_filterable')) {
        if ($('is_filterable').selectedIndex == 0) {
            $('position').disabled = true;
        } else {
            if (!$('position').getAttribute('readonly')) {
                $('position').disabled = false;
            }
        }
    }
}


function updateRequriedOptions()
{
    if ($F('frontend_input')=='select' && $F('is_required')==1) {
        $('option-count-check').addClassName('required-options-count');
    } else {
        $('option-count-check').removeClassName('required-options-count');
    }
}

if($('frontend_input')) {
    Event.observe($('frontend_input'), 'change', updateRequriedOptions);
    Event.observe($('frontend_input'), 'change', bindAttributeInputType);
    Event.observe($('is_global'), 'change', checkIsConfigurableVisibility);
}

if ($('is_filterable')) {
    Event.observe($('is_filterable'), 'change', switchIsFilterable);
}

if ($('is_required')) {
    Event.observe($('is_required'), 'change', updateRequriedOptions);
}
bindAttributeInputType();
</script>
