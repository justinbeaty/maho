<?php
/**
 * Maho
 *
 * @category    design
 * @package     default_default
 * @copyright   Copyright (c) 2006-2020 Magento, Inc. (https://magento.com)
 * @copyright   Copyright (c) 2021-2022 The OpenMage Contributors (https://openmage.org)
 * @copyright   Copyright (c) 2024 Maho (https://mahocommerce.com)
 * @license     https://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<script>
const inputTypeDefs = <?= Mage::helper('core')->jsonEncode(Mage::helper('eav')->getInputTypes('catalog_product')) ?>;

function saveAndContinueEdit() {
    disableElements('save');
    var activeTab = product_attribute_tabsJsTabs.activeTab.id;
    if (editForm.submit($('edit_form').action+'back/edit/tab/' + activeTab) == false) {
        enableElements('save');
    }
    varienGlobalEvents.attachEventHandler('formValidateAjaxComplete', function () {
        enableElements('save');
    });
}

function saveAttribute() {
    disableElements('save');
    if (editForm.submit() == false) {
        enableElements('save');
    }
    varienGlobalEvents.attachEventHandler('formValidateAjaxComplete', function () {
        enableElements('save');
    });
}

function updateApplyToValues() {
    const inputTypeEl = document.getElementById('frontend_input');
    const applyToEl = document.getElementById('apply_to');
    if (!inputTypeEl || !applyToEl) {
        return;
    }
    const disabledTypes = inputTypeDefs[inputTypeEl.value]?.disabled_types ?? [];
    for (let optionEl of applyToEl.options) {
        if (disabledTypes.includes(optionEl.value)) {
            optionEl.disabled = true;
            optionEl.selected = false;
        } else {
            optionEl.disabled = false;
        }
    }
}

function toggleApplyVisibility(select) {
    const applyToEl = document.getElementById('apply_to');
    if (!applyToEl) {
        return;
    }
    if (select.value == 1) {
        applyToEl.classList.remove('no-display', 'ignore-validate');
    } else {
        applyToEl.classList.add('no-display', 'ignore-validate');
    }
}

document.addEventListener('DOMContentLoaded', () => {
    new EavAttributeEditForm('edit_form', inputTypeDefs, {
        callbacks: {
            afterUpdateForm: updateApplyToValues,
        },
    });
});
</script>
